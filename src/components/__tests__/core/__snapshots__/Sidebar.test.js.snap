// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Cases for Sidebar Snapshot 1`] = `
<div
  className="makeStyles-root-1"
>
  <nav
    className="makeStyles-drawer-8"
  >
    <div>
      <div />
      <WithStyles(ForwardRef(List))
        disablePadding={true}
      >
        <WithStyles(ForwardRef(ListItem))
          button={true}
          id="overviewItem"
          onClick={[Function]}
          selected={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))
            className="makeStyles-listItemRoot-9"
          >
            <Memo(ForwardRef(HomeOutlinedIcon))
              className="makeStyles-overviewIcon-3"
            />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <WithStyles(ForwardRef(Typography))
              variant="body2"
            >
              Overview
            </WithStyles(ForwardRef(Typography))>
          </WithStyles(ForwardRef(ListItemText))>
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          id="settingsItem"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))
            className="makeStyles-listItemRoot-9"
          >
            <Memo(ForwardRef(SettingsOutlinedIcon))
              className="makeStyles-settingsIcon-5"
            />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <WithStyles(ForwardRef(Typography))
              variant="body2"
            >
              Settings
            </WithStyles(ForwardRef(Typography))>
          </WithStyles(ForwardRef(ListItemText))>
          <Memo(ForwardRef(ExpandMoreIcon)) />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            component="div"
            disablePadding={true}
          >
            <WithStyles(ForwardRef(ListItem))
              button={true}
              onClick={[Function]}
              selected={false}
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <Memo(ForwardRef(DescriptionOutlinedIcon))
                  className="makeStyles-textModerationIcon-2"
                />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <WithStyles(ForwardRef(Typography))
                  variant="body2"
                >
                  Text Moderation
                </WithStyles(ForwardRef(Typography))>
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <Memo(ForwardRef(ChatBubbleOutlineIcon))
                  className="makeStyles-chatIcon-6"
                />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <WithStyles(ForwardRef(Typography))
                  variant="body2"
                >
                  Image Moderation
                </WithStyles(ForwardRef(Typography))>
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(ListItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          id="usersItem"
          onClick={[Function]}
          selected={false}
        >
          <WithStyles(ForwardRef(ListItemIcon))
            className="makeStyles-listItemRoot-9"
          >
            <Memo(ForwardRef(PersonOutlinedIcon))
              className="makeStyles-userIcon-7"
            />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <WithStyles(ForwardRef(Typography))
              variant="body2"
            >
              Users
            </WithStyles(ForwardRef(Typography))>
          </WithStyles(ForwardRef(ListItemText))>
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          id="channelsItem"
          onClick={[Function]}
          selected={false}
        >
          <WithStyles(ForwardRef(ListItemIcon))
            className="makeStyles-listItemRoot-9"
          >
            <Memo(ForwardRef(MailOutlineIcon))
              className="makeStyles-channelIcon-4"
            />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <WithStyles(ForwardRef(Typography))
              variant="body2"
            >
              Channels
            </WithStyles(ForwardRef(Typography))>
          </WithStyles(ForwardRef(ListItemText))>
        </WithStyles(ForwardRef(ListItem))>
      </WithStyles(ForwardRef(List))>
    </div>
  </nav>
  <main
    className="makeStyles-content-10"
  />
</div>
`;
